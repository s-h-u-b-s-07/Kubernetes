DOCKER FILE


FROM node:17
WORKDIR /app
COPY package.json /app
RUN npm install
COPY . /app
CMD node app.js
EXPOSE 80


**************************************

INGRESS FILE

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mynode-ingress
  namespace: dev
spec:
  rules:
  - host: node.com
    http:
      paths:
      - path: /testpath
        pathType: Prefix
        backend:
          service:
            name: node
            port:
              number: 80

*********************************************

package.json


{
  "name": "express",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "express": "^4.17.3"
  }
}

*****************************************************

app.js

const express = require("express");
const http = require("http");

const app = express();

const server = http.createServer(app);

app.get('/', function(req,res){
        res.send("Hello Everyone! Welcome To The Node App");
});

server.listen(80, function(){
        console.log("Server is listening on port: 80");
});

*********************************************************

mydeploy.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydeploy
  namespace: dev
  labels:
    app: node
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      labels:
        app: node
    spec:
      containers:
      - name: node
        image: shub07/hello_world_app
        imagePullPolicy: Always
        ports:
        - containerPort: 81
---
apiVersion: v1
kind: Service
metadata:
  name: node
  namespace: dev
spec:
  type: NodePort
  selector:
    app: node
  ports:
    - port: 81

**************************************


